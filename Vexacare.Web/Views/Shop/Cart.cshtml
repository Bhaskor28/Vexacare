@model Vexacare.Application.Products.ViewModels.Cart.CartVM
@{
    ViewData["Title"] = "Shopping Cart";
}

<style>
    /* Cart styles */
    .cart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding: 20px 0;
    }

    .clear-cart-btn {
        background: #e74c3c;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        font-weight: 600;
    }

        .clear-cart-btn:hover {
            background: #c0392b;
        }

    .cart-item {
        display: flex;
        padding: 20px;
        border-bottom: 1px solid #eee;
        transition: all 0.3s ease;
        background: white;
        margin-bottom: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .item-image {
        width: 100px;
        margin-right: 20px;
    }

        .item-image img {
            width: 100%;
            height: auto;
            border-radius: 5px;
        }

    .item-details {
        flex-grow: 1;
    }

        .item-details h3 {
            margin: 0 0 10px 0;
            color: #2c3e50;
        }

    .price {
        font-weight: bold;
        color: #4CAF50;
        margin-bottom: 10px;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
        margin-top: 10px;
    }

    .qty-btn {
        width: 30px;
        height: 30px;
        background: #f8f9fa;
        border: 1px solid #ddd;
        border-radius: 3px;
        cursor: pointer;
        font-weight: bold;
    }

        .qty-btn:hover {
            background: #e9ecef;
        }

    .quantity-controls span {
        margin: 0 10px;
        font-weight: bold;
        min-width: 20px;
        text-align: center;
    }

    .item-subtotal {
        text-align: right;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

        .item-subtotal p {
            font-weight: bold;
            font-size: 1.1em;
            margin: 0;
        }

    .remove-btn {
        background: #ff4757;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 3px;
        cursor: pointer;
        margin-top: 10px;
    }

        .remove-btn:hover {
            background: #ff3742;
        }

    .cart-summary {
        margin-top: 30px;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 5px;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        padding: 5px 0;
    }

        .summary-row.total {
            font-weight: bold;
            font-size: 1.2em;
            border-top: 2px solid #ddd;
            padding-top: 15px;
            margin-top: 15px;
        }

    .cart-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 25px;
        gap: 15px;
    }

    .continue-shopping {
        background: #6c757d;
        color: white;
        padding: 12px 25px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: 600;
        text-align: center;
        flex: 1;
    }

        .continue-shopping:hover {
            background: #5a6268;
            color: white;
        }

    .checkout-btn {
        background: #4CAF50;
        color: white;
        padding: 12px 25px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: 600;
        text-align: center;
        flex: 1;
    }

        .checkout-btn:hover {
            background: #3d8b40;
            color: white;
        }

    .empty-cart {
        text-align: center;
        padding: 60px 0;
        background: white;
        border-radius: 10px;
        margin: 20px 0;
    }

        .empty-cart i {
            font-size: 64px;
            color: #ddd;
            margin-bottom: 20px;
        }

        .empty-cart h3 {
            color: #7f8c8d;
            margin-bottom: 10px;
        }

        .empty-cart p {
            color: #95a5a6;
            margin-bottom: 30px;
        }

    .btn-primary {
        background: #4CAF50;
        color: white;
        padding: 12px 30px;
        border-radius: 5px;
        text-decoration: none;
        display: inline-block;
        font-weight: 600;
    }

        .btn-primary:hover {
            background: #3d8b40;
            color: white;
        }

    /* Animation for item removal */
    .item-removing {
        opacity: 0;
        transform: translateX(100px);
        transition: all 0.5s ease;
    }
</style>

<section id="shopping-cart">
    <div class="container">
        <div class="cart-header">
            <h2>Your Shopping Cart</h2>
            @if (Model.Items.Any())
            {
                <button id="clear-cart" class="clear-cart-btn">
                    <i class="fas fa-trash"></i> Clear Cart
                </button>
            }
        </div>

        @if (Model.Items.Any())
        {
            <div class="cart-items">
                @foreach (var item in Model.Items)
                {
                    <div class="cart-item" data-product-id="@item.ProductId">
                        <div class="item-image">
                            <img src="@item.ImagePath" alt="@item.ProductName">
                        </div>
                        <div class="item-details">
                            <h3>@item.ProductName</h3>
                            <p class="price">$@item.Price.ToString("0.00")</p>
                            <div class="quantity-controls">
                                <button class="qty-btn decrease">-</button>
                                <span class="item-quantity">@item.Quantity</span>
                                <button class="qty-btn increase">+</button>
                            </div>
                        </div>
                        <div class="item-subtotal">
                            <p>$@item.Subtotal.ToString("0.00")</p>
                            <button class="remove-btn" data-product-id="@item.ProductId">
                                <i class="fas fa-times"></i> Remove
                            </button>
                        </div>
                    </div>
                }
            </div>

            <div class="cart-summary">
                <div class="summary-row">
                    <span>Subtotal</span>
                    <span id="cart-subtotal">$@Model.Total.ToString("0.00")</span>
                </div>
                <div class="summary-row">
                    <span>Shipping</span>
                    <span>$0.00</span>
                </div>
                <div class="summary-row">
                    <span>Tax (8%)</span>
                    <span id="cart-tax">$@((Model.Total * 0.08m).ToString("0.00"))</span>
                </div>
                <div class="summary-row total">
                    <span>Total</span>
                    <span id="cart-total">$@((Model.Total * 1.08m).ToString("0.00"))</span>
                </div>

                <div class="cart-actions">
                    <a href="@Url.Action("Index", "Shop")" class="continue-shopping">
                        <i class="fas fa-arrow-left"></i> Continue Shopping
                    </a>
                    <a href="@Url.Action("Checkout", "Shop")" class="checkout-btn">
                        <i class="fas fa-lock"></i> Checkout
                    </a>
                </div>
            </div>
        }
        else
        {
            <div class="empty-cart">
                <i class="fas fa-shopping-cart"></i>
                <h3>Your cart is empty</h3>
                <p>Looks like you haven't added any items to your cart yet.</p>
                <a href="@Url.Action("Index", "Shop")" class="btn-primary">
                    <i class="fas fa-shopping-bag"></i> Start Shopping
                </a>
            </div>
        }
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Remove item from cart
            $('.remove-btn').click(function() {
                const productId = $(this).data('product-id');
                const $cartItem = $(this).closest('.cart-item');

                // Show loading animation
                $cartItem.addClass('item-removing');

                $.post('@Url.Action("RemoveFromCart", "Shop")', {
                    productId: productId
                }, function(response) {
                    if (response.success) {
                        // Remove the item from UI after animation
                        setTimeout(function() {
                            $cartItem.remove();

                            // Update cart summary
                            updateCartSummary(response.cartTotal);

                            // Update cart count in navbar
                            $('#cart-count').text(response.cartCount);

                            // If no items left, reload the page to show empty cart
                            if ($('.cart-item').length === 0) {
                                location.reload();
                            }
                        }, 500);
                    } else {
                        alert('Error: ' + response.message);
                        $cartItem.removeClass('item-removing');
                    }
                }).fail(function() {
                    alert('Error removing item from cart. Please try again.');
                    $cartItem.removeClass('item-removing');
                });
            });

            // Clear entire cart
            $('#clear-cart').click(function() {
                if (confirm('Are you sure you want to clear your entire cart? This action cannot be undone.')) {
                    // Show loading state
                    $(this).html('<i class="fas fa-spinner fa-spin"></i> Clearing...');

                    $.post('@Url.Action("ClearCart", "Shop")', function(response) {
                        if (response.success) {
                            // Update cart count in navbar
                            $('#cart-count').text(response.cartCount);

                            // Reload the page to show empty cart
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                            $('#clear-cart').html('<i class="fas fa-trash"></i> Clear Cart');
                        }
                    }).fail(function() {
                        alert('Error clearing cart. Please try again.');
                        $('#clear-cart').html('<i class="fas fa-trash"></i> Clear Cart');
                    });
                }
            });

            // Update cart summary
            function updateCartSummary(subtotal) {
                const tax = subtotal * 0.08;
                const total = subtotal + tax;

                $('#cart-subtotal').text('$' + subtotal.toFixed(2));
                $('#cart-tax').text('$' + tax.toFixed(2));
                $('#cart-total').text('$' + total.toFixed(2));
            }

            // Quantity controls - increase
            $('.qty-btn.increase').click(function() {
                const $quantitySpan = $(this).siblings('.item-quantity');
                let quantity = parseInt($quantitySpan.text());
                quantity++;
                $quantitySpan.text(quantity);

                updateItemQuantity($(this).closest('.cart-item'));
            });

            // Quantity controls - decrease
            $('.qty-btn.decrease').click(function() {
                const $quantitySpan = $(this).siblings('.item-quantity');
                let quantity = parseInt($quantitySpan.text());

                if (quantity > 1) {
                    quantity--;
                    $quantitySpan.text(quantity);
                    updateItemQuantity($(this).closest('.cart-item'));
                }
            });

            // Update item quantity in cart
            function updateItemQuantity($cartItem) {
                const productId = $cartItem.data('product-id');
                const quantity = parseInt($cartItem.find('.item-quantity').text());

                // Show loading state
                $cartItem.css('opacity', '0.7');

                $.post('@Url.Action("UpdateCartItem", "Shop")', {
                    productId: productId,
                    quantity: quantity
                }, function(response) {
                    $cartItem.css('opacity', '1');

                    if (response.success) {
                        // Update cart summary
                        updateCartSummary(response.cartTotal);

                        // Update cart count in navbar
                        $('#cart-count').text(response.cartCount);

                        // Update subtotal for this item
                        const price = parseFloat($cartItem.find('.price').text().replace('$', ''));
                        $cartItem.find('.item-subtotal p').text('$' + (price * quantity).toFixed(2));
                    } else {
                        alert('Error updating quantity: ' + response.message);
                    }
                }).fail(function() {
                    $cartItem.css('opacity', '1');
                    alert('Error updating quantity. Please try again.');
                });
            }
        });
    </script>
}